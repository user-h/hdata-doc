(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{345:function(t,a,s){"use strict";s.r(a);var n=s(3),e=function(t){t.options.__data__block__={mermaid_382ee14e:"classDiagram\n  class Target{\n    <<Interface>>\n    +request()\n  }\n  class Adaptee{\n    +specificRequest()\n  }\n  class Adaptor{\n    Adaptee adaptee\n    +request()\n  }\n  \n  class Client{\n  }\n\n  Target <|.. Adaptor : 实现\n  Adaptee <-- Adaptor : 关联\n  Target <-- Client : 关联\n",mermaid_382ee1a4:"classDiagram\n  class Target{\n    +request()\n  }\n  class Adaptee{\n    +specificRequest()\n  }\n  class Adaptor{\n    Adaptee adaptee\n    +request()\n  }\n  \n  class Client{\n  }\n\n  Target <|-- Adaptor : 继承\n  Adaptee <|-- Adaptor : 继承\n  Target <-- Client : 关联\n",mermaid_382ee220:"classDiagram\n  class Iterator{\n    <<Interface>>\n    +hasNext()\n    +next()\n    +remove()\n  }\n  class Enumeration{\n    <<Interface>>\n    +hasMoreElements()\n    +nextElement()\n  }\n  \n  class EnumerationIterator{\n    Enumeration enumeration\n    +hasNext()\n    +next()\n    +remove()\n  }\n\n  Iterator <|.. EnumerationIterator : 实现\n  Enumeration <-- EnumerationIterator : 关联\n",mermaid_382ee23f:"classDiagram  \n    class HomeTheaterFacade{\n      Amplifier amo\n      Tuner tuner\n      DvdPlayer dvd\n      CdPlayer cd\n      Projector projector\n      TheaterLights lights\n      Screen screen\n      PopcornPopper popper\n      + watchMovie()\n      + endMovie()\n      + listenToCd()\n      + endCd()\n      + listenToRadio()\n      + endRadio()\n    }\n    class Amplifier{\n      Tuner tuner\n      DvdPlayer dvdPlayer\n      CdPlayer cdPlayer\n      on()\n      off()\n      setCd()\n      setDvd()\n      setStereoSound()\n      setSturroudSoud()\n      setTuner()\n      setVolume()\n      toString()\n    }\n    class DvdPlayer{\n      Amplifier amplifier\n      on()\n      off()\n      eject()\n      pause()\n      play()\n      setStereoSound()\n      setSturroudSoud()\n      stop()\n    }\n    class CdPlayer{\n      Amplifier amplifier\n      on()\n      off()\n      eject()\n      pause()\n      play()\n      stop()\n      toString()\n    }\n    class Projector{\n      DvdPlayer dvdPlayer\n      on()\n      off()\n      tvMode()\n      wideScreenMode()\n      toString()\n    }\n\n    class Tuner{\n      Amplifier amplifier\n      on()\n      off()\n      setAm()\n      setFm()\n      setFrequency()\n      toString()\n    }\n    class Screen{\n      up()\n      down()\n      toString()\n    }\n    class PopcornPopper{\n      on()\n      off()\n      pop()\n      toString()\n    }\n    class TheaterLights{\n      on()\n      off()\n      dim()\n      toString()\n    }\n\n    HomeTheaterFacade o-- Amplifier : 聚合\n    HomeTheaterFacade o-- Tuner : 聚合\n    HomeTheaterFacade o-- DvdPlayer : 聚合\n    HomeTheaterFacade o-- CdPlayer : 聚合\n    HomeTheaterFacade o-- Projector : 聚合\n    HomeTheaterFacade o-- TheaterLights : 聚合\n    HomeTheaterFacade o-- Screen : 聚合\n    HomeTheaterFacade o-- PopcornPopper : 聚合\n\t\n\tAmplifier ..> Tuner:依赖\n\tAmplifier ..> DvdPlayer:依赖\n\tAmplifier ..> CdPlayer:依赖\n\tTuner ..> Amplifier:依赖\n\tDvdPlayer ..> Amplifier:依赖\n\tCdPlayer ..> Amplifier:依赖\n\tProjector ..> DvdPlayer:依赖\n    Client ..> HomeTheaterFacade : 依赖\n"}},r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"适配器模式-adaptor-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适配器模式-adaptor-pattern"}},[t._v("#")]),t._v(" 适配器模式（Adaptor Pattern）")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"red"}},[a("b",[t._v("适配器模式")]),t._v(" 将一个类的接口，转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。")])]),t._v(" "),a("h4",{attrs:{id:"问题提出-火鸡转换器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题提出-火鸡转换器"}},[t._v("#")]),t._v(" 问题提出：火鸡转换器")]),t._v(" "),a("p",[t._v("假如我们在路上遇见一个NPC，必须给他一只鸭子才能完成任务。但是我们只有一只火鸡，这时，我们就需要适配器模式来适配他的需求。😕🤣")]),t._v(" "),a("h4",{attrs:{id:"类图-对象适配器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类图-对象适配器"}},[t._v("#")]),t._v(" 类图（对象适配器）")]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("采用组合的方式")]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee14e",graph:t.$dataBlock.mermaid_382ee14e}}),a("h4",{attrs:{id:"代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),a("code-group",[a("code-block",{attrs:{title:"鸭子类",active:""}},[a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 鸭子接口\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duck")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MallardDuck")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"绿头鸭叫"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"绿头鸭飞"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("code-block",{attrs:{title:"火鸡类"}},[a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 火鸡接口\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Turkey")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gobble")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 火鸡咯咯叫")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 火鸡飞")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 火鸡实现\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WildTurkey")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Turkey")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gobble")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"火鸡咯咯叫"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"火鸡飞行"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("code-block",{attrs:{title:"适配器"}},[a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TurkeyAdaptor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duck")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Turkey")]),t._v(" turkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TurkeyAdaptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Turkey")]),t._v(" turkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("turkey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" turkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        turkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gobble")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        turkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("code-block",{attrs:{title:"测试类"}},[a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MallardDuck")]),t._v(" duck "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MallardDuck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一只鸭子")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WildTurkey")]),t._v(" turkey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WildTurkey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一只火鸡")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" main "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testDuck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("duck"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        main.testDuck(turkey);")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TurkeyAdaptor")]),t._v(" turkeyAdaptor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TurkeyAdaptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("turkey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testDuck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("turkeyAdaptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 鸭子测试类\n     * @param duck\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testDuck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duck")]),t._v(" duck"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        duck"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("quack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        duck"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])],1),t._v(" "),a("h4",{attrs:{id:"多继承时类适配器-java无法实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多继承时类适配器-java无法实现"}},[t._v("#")]),t._v(" 多继承时类适配器（Java无法实现）")]),t._v(" "),a("p",[t._v("采用继承的形式"),a("br")]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee1a4",graph:t.$dataBlock.mermaid_382ee1a4}}),a("h4",{attrs:{id:"真实世界-java-的适配器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#真实世界-java-的适配器"}},[t._v("#")]),t._v(" 真实世界（Java）的适配器")]),t._v(" "),a("h5",{attrs:{id:"问题提出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题提出"}},[t._v("#")]),t._v(" 问题提出")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("旧世界的枚举器")]),t._v(" "),a("blockquote",[a("p",[t._v("如果你已经使用过Java，可能记得早期的集合(collection)类型（例如：Vector、Stack、Hashtable)都实现了一个名为elements（）的方法。该方法会返回一个Enumeration（举）。这个Enumeration接口可以逐一走过此集合内的每个元素，而无需知道它们在集合内是如何被管理的。")])])]),t._v(" "),a("li",[a("p",[t._v("新世界的迭代器")]),t._v(" "),a("blockquote",[a("p",[t._v("当Sun推出更新后的集合类时，开始使用了Iterator（迭代器）接口，这个接口和枚举接口很像，都可以让你遍历此集合类型内的每个元素，但不同的是，迭代器还提供了删除元素的能力。")])])]),t._v(" "),a("li",[a("p",[t._v("遗留代码暴露了枚举器接口，但是新代码只希望用迭代器。想解决这个问题，需要构造一个适配器。")])])]),t._v(" "),a("h5",{attrs:{id:"将枚举适配到迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将枚举适配到迭代器"}},[t._v("#")]),t._v(" 将枚举适配到迭代器")]),t._v(" "),a("p",[t._v("由于 Enumeration 为“只读”接口，无法实现 remove() 的效果，只能先在 remove 中抛出异常。（可以使用装饰者模式实现？）")]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee220",graph:t.$dataBlock.mermaid_382ee220}}),a("h2",{attrs:{id:"外观模式-facade-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外观模式-facade-pattern"}},[t._v("#")]),t._v(" 外观模式（Facade Pattern）")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"red"}},[a("b",[t._v("外观模式")]),t._v(" 提供了一个统一的接口，用来访问子系统中的一群接口。外观定义了一个高层接口，让子系统更容易使用。")])]),t._v(" "),a("h4",{attrs:{id:"类图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[t._v("#")]),t._v(" 类图")]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee23f",graph:t.$dataBlock.mermaid_382ee23f}}),a("h4",{attrs:{id:"最少知道原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最少知道原则"}},[t._v("#")]),t._v(" 最少知道原则")]),t._v(" "),a("p",[t._v("最少知识原则：只和你的密友谈话。")]),t._v(" "),a("blockquote",[a("p",[t._v("最少知识（Least Knowledge）原则告诉我们要减少对象之间的交互，只留下几个“密友”。"),a("br"),t._v("\n这个原则希望我们在设计中，不要让太多的类耦合在一起，免得修改系统中一部分，会影响到其他部分。如果许多类之间相互依赖，那么这个系统就会变成一个易碎的系统，它需要花许多成本维护，也会因为太复杂而不容易被其他人了解。")])]),t._v(" "),a("p",[t._v("该原则提供一些方针：就任何对象而言，在该对线的方法内，我们只应该调用属于以下范围的方法：")]),t._v(" "),a("ol",[a("li",[t._v("该对象本身")]),t._v(" "),a("li",[t._v("被当作方法的参数而传递进来的对象")]),t._v(" "),a("li",[t._v("此方法所创建或实例化的任何对象")]),t._v(" "),a("li",[t._v("对象的任何组件（HAS-A关系）")])]),t._v(" "),a("h4",{attrs:{id:"要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#要点"}},[t._v("#")]),t._v(" 要点")]),t._v(" "),a("ul",[a("li",[t._v("当需要使用一个现有的类而其接口并不符合你的需要时，就使用适配器。")]),t._v(" "),a("li",[t._v("当需要简化并统一一个很大的接口或者一群复杂的接口时，使用外观。")]),t._v(" "),a("li",[t._v("适配器改变接口以符合客户的期望。")]),t._v(" "),a("li",[t._v("外观将客户从一个复杂的子系统中解耦。")]),t._v(" "),a("li",[t._v("实现一个适配器可能需要一番功夫，也可能不费功夫，视目标接口的大小与复杂度而定。")]),t._v(" "),a("li",[t._v("实现一个外观，需要将子系统组合进外观中，然后将工作委托给子系统执行。")]),t._v(" "),a("li",[t._v("适配器模式有两种形式：对象适配器和类适配器。类适配器需要用到多重继承。")]),t._v(" "),a("li",[t._v("你可以为一个子系统实现一个以上的外观。")]),t._v(" "),a("li",[t._v("适配器将一个对象包装起来以改变其接口，装饰者将一个对象包装起来以增加新的行为和责任，而外观将一群对象“包装”起来以简化其接口。")])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);a.default=r.exports}}]);