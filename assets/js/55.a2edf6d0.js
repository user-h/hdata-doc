(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{383:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"oracle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oracle"}},[t._v("#")]),t._v(" Oracle")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"正则替换函数regexp-replace-不规则日期修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则替换函数regexp-replace-不规则日期修改"}},[t._v("#")]),t._v(" 正则替换函数REGEXP_REPLACE（不规则日期修改）")]),t._v(" "),s("p",[s("strong",[t._v("日期格式检查")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 检查大致格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ^\\d{4}([-/])\\d{2}([-/])\\d{2}(\\s+\\d{2}:\\d{2}:\\d{2}){0,1}$'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 检查部分值（部分月份、日期、时分秒）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ^\\d{4}[-/.](0[1-9]|1[0-2])[-/.]([012][0-9]|3[0-1])\\s+([01][0-9]|2[0-3]):[0-5]\\d:[0-5]\\d$")]),t._v("\n")])])]),s("p",[s("strong",[t._v("01-1月 -19")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看NLS_TIMESTAMP_FORMAT和NLS_DATE_LANGUAGE参数和SYSTIMESTAMP 数据格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" v$nls_parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SYSTIMESTAMP "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" DUAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 确定NLS_TIMESTAMP_FORMAT格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- alter session set NLS_TIMESTAMP_FORMAT = 'YYYY-MM-DD HH.MI.SS.FF8 AM';  -- 如果参数NLS_TIMESTAMP_FORMAT格式不是DD-MON-RR HH.MI.SSXFF AM首先要调整该参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看NLS_DATE_LANGUAGE是SIMPLIFIED CHINESE还是AMERICA，如果是AMERICA需要修改成SIMPLIFIED CHINESE，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" nls_date_language"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIMPLIFIED CHINESE'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" TO_DATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01-1月 -19'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DD-MON -RR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" DUAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("2021-1-02")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1. 可以直接转日期 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" to_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yyyy-MM-dd hh24:mi:ss'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" dual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2. 当字符串处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" REGEXP_LIKE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^(\\d{4})[-|/](\\d{1})[-|/](\\d{1})$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" REGEXP_REPLACE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^(\\d{4})[-|/](\\d{1})[-|/](\\d{1})$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\1-0\\2-0\\3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" REGEXP_LIKE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^(\\d{4})[-|/](\\d{1})[-|/](\\d{2})$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" REGEXP_REPLACE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^(\\d{4})[-|/](\\d{1})[-|/](\\d{2})$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\1-0\\2-\\3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" REGEXP_LIKE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^(\\d{4})[-|/](\\d{2})[-|/](\\d{1})$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" REGEXP_REPLACE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^(\\d{4})[-|/](\\d{2})[-|/](\\d{1})$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\1-\\2-0\\3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2021-1-02'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 转为日期格式，抽取出年、月、日，左补全 位数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" extract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2022-8-11'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" LPAD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MONTH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2022-8-11'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" LPAD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extract"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DAY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2022-8-11'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"聚合函数lag-lead"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数lag-lead"}},[t._v("#")]),t._v(" 聚合函数lag/lead")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("lead(value_expr [,offset][,default]) over([query_partition_clause] order by Order_by_clause)\n\nlag(exp_str,offset,defval) over()\nexp_str 是要做对比的字段\noffset 是exp_str字段的偏移量 比如说 offset 为2 则 拿exp_str的第一行和第三行对比，第二行和第四行，依次类推，offset的默认值为1！\ndefval是当该函数无值可用的情况下返回的值。Lead函数的用法类似。\n")])])]),s("h3",{attrs:{id:"聚合函数wm-concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数wm-concat"}},[t._v("#")]),t._v(" 聚合函数wm_concat")]),t._v(" "),s("blockquote",[s("p",[t._v("注：Oracle 19c中，wm_concat失效。wm_concat函数是oracle的非公开函数，在新版的oracle中不支持该函数。"),s("br"),t._v("\n解决方法：")]),t._v(" "),s("ol",[s("li",[t._v("创建 wm_concat 函数， 参考连接：https://blog.csdn.net/sun2012930/article/details/111712882")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("listagg(多行转单行的列,分隔符) within group(order by 排序字段)")]),t._v(" 写法替换（返回类型为字符串，长度最大为4000）")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("xmlagg(xmlparse( content(多行转单行的列) ) order by 排序字段).getclobval()")]),t._v(" 写法替换")])])]),t._v(" "),s("p",[t._v("多行变一行")]),t._v(" "),s("ul",[s("li",[t._v("类似于 MySQL 中的 GROUP_CONCAT "),s("code",[t._v("GROUP_CONCAT( [distinct] 要连接的字段 [ORDER BY 排序字段 ASC/DESC ] [separator '分隔符'] )")])]),t._v(" "),s("li",[t._v("类似于 Hive 中的 concat_ws + collect_list（collect_set）效果 "),s("code",[t._v("concat_ws('_', collect_set(id))")])])]),t._v(" "),s("h3",{attrs:{id:"单行函数l-r-pad"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单行函数l-r-pad"}},[t._v("#")]),t._v(" 单行函数L[R]PAD")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("语法\nLPAD(string,padded_length,[ pad_string]) :从左开始填充,L:left 左,PAD:pad 填充\nRPAD(string,padded_length,[ pad_string]) :从右开始填充,R:right 右,PAD:pad 填充\n\n解释\nstring：原数据，即要被填充的数据；\npadded_length：填充后的长度；\npad_string：填充字符串 可选填，如果不填就粘贴空格\n")])])]),s("h3",{attrs:{id:"单行函数md5加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单行函数md5加密"}},[t._v("#")]),t._v(" 单行函数MD5加密")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" utl_raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cast_to_raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DBMS_OBFUSCATION_TOOLKIT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MD5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INPUT_STRING "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dual\n")])])]),s("h3",{attrs:{id:"sys-utl-match-edit-distance-similarity-文本相似度计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sys-utl-match-edit-distance-similarity-文本相似度计算"}},[t._v("#")]),t._v(" SYS.UTL_MATCH.edit_distance_similarity 文本相似度计算")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("点击查看")]),t._v(" "),s("p",[t._v("过程梳理：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("由于有两个数据量过万的表数据进行对比，且编码不一致不能进行比对，只能通过同一区划，相似名称进行比对，确认一对一关系。\n\n确定思路是把数据分成多部分，能确认一对一关系的先插入结果表中。\n\n先能想到的是通过等值关联取能关联上的先插入到结果表。\n\n后通过instr(str1, str2) > 0关联，将此部分数据插入到结果表。\n\n后由于instr只能找出连续子串，非连续的简称一类并不能解决，采用自定义函数通过遍历短字符串的每个字符，到长字符串中查找如果有找不到的字符，返回-1；若全能找到返回短串的长度。\n\n后由于有些名称有错别字或其他问题，上面的自定义函数并不能解决，故考虑判断字符串的相似度，Oracle自带判断文本相似度函数，故用其作为关联条件。\n")])])])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AGENCY_ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AGENCY_CODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AGENCY_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MOF_DIV_CODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MOF_DIV_NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GUID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("PROVINCE \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("  YTHDWXX A\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v("  DZXTDWXX B\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v("  SYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UTL_MATCH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edit_distance_similarity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("agency_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v("  MOF_DIV_CODE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rpad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PROVINCE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"oracle实现数据炸裂效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oracle实现数据炸裂效果"}},[t._v("#")]),t._v(" oracle实现数据炸裂效果")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--oracle根据分隔符将一行拆分为多行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" tmp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--临时数据集")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,2,3'")]),t._v(" val\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dual\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4,5,6'")]),t._v(" val\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" regexp_substr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[^,]+'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--截取对应行数的数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tmp t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("level")]),t._v(" lv"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--生成行数序列数据 1到最大行数")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[^,]+'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" r_count"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--计算数据集中拆分后最大的行数")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tmp a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" b\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("connect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("level")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("r_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" t2\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" regexp_substr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[^,]+'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 排除掉空的数据")]),t._v("\n")])])]),s("h3",{attrs:{id:"oracle行列转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oracle行列转换"}},[t._v("#")]),t._v(" oracle行列转换")]),t._v(" "),s("h4",{attrs:{id:"行转列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行转列"}},[t._v("#")]),t._v(" 行转列")]),t._v(" "),s("ol",[s("li",[t._v("PIVOT")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" （数据查询集）\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PIVOT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Score"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*行转列后 列的值*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" \n coursename"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*需要行转列的列*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("转换后列的值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 通俗理解就是把一列拆成了多列，被拆的列不能再被select？")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("通过 group by + case when 判断实现")])]),t._v(" "),s("h4",{attrs:{id:"列转行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列转行"}},[t._v("#")]),t._v(" 列转行")]),t._v(" "),s("ol",[s("li",[t._v("unpivot")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" 字段 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" 数据集\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unpivot")]),t._v("（自定义列名"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*列的值*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 自定义列名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v("（列名））\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("利用union all 进行拼接")])]),t._v(" "),s("h3",{attrs:{id:"自定义函数-存储过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义函数-存储过程"}},[t._v("#")]),t._v(" 自定义函数(存储过程)")]),t._v(" "),s("p",[s("strong",[t._v("用于匹配简称")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 一个字符串包含另一个字符串中的所有字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("replace")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" checks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_a varchar2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v_b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" number\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n  num number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cou number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  j number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  index1 number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n  num :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cou:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  j :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  index1 :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v("\n     j :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" substr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" substr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n      cou:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cou"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      index1 :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" index1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cou"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--dbms_output.put_line(cou||'    '||length(v_b));")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"merge-into-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#merge-into-语法"}},[t._v("#")]),t._v(" MERGE INTO 语法")]),t._v(" "),s("p",[t._v("MERGE INTO是Oracle SQL中用于将一个表中的数据合并到另一个表中的命令。该命令可以根据指定的条件来确定在目标表中是插入还是更新记录。")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MERGE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" target_table\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USING")]),t._v(" source_table\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MATCHED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" target_column "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source_column\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MATCHED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target_column1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target_column2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source_column1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source_column2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("其中")]),t._v(" "),s("ul",[s("li",[t._v("target_table是要合并到的目标表；")]),t._v(" "),s("li",[t._v("source_table是要从中获取数据的源表；")]),t._v(" "),s("li",[t._v("condition是用于匹配目标表和源表的条件；")]),t._v(" "),s("li",[t._v("UPDATE SET语句用于更新目标表中已有的记录；")]),t._v(" "),s("li",[t._v("INSERT语句用于将源表中不存在的记录插入到目标表中。")])]),t._v(" "),s("h3",{attrs:{id:"不常用语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不常用语法"}},[t._v("#")]),t._v(" 不常用语法")]),t._v(" "),s("h4",{attrs:{id:"触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[t._v("#")]),t._v(" 触发器")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 向另一个数据库同步表数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRIGGER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"触发器名"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("after")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" 表名\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for each row")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" inserting "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@INNERDB")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       CODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(":new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       :new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       :new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  elsif updating "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@INNERDB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" :old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@INNERDB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n CODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(":new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     :new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CODE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     :new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelsif deleting "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@INNERDB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" :old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"出包含-clob-字段的脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#出包含-clob-字段的脚本"}},[t._v("#")]),t._v(" 出包含 CLOB 字段的脚本")]),t._v(" "),s("p",[s("strong",[t._v("条件允许的话还是用 Kettle、DataX等迁移工具，没有这个麻烦事")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1. 使用 plsql 工具查询该脚本（适用于一定长度的）")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" q_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         q_code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         q_title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("39001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("39001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" LENGTH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("48001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'||TO_CLOB('''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" SUBSTR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Q_TABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("48001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''')'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table_name t \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" sort_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2. 使用导出功能导出SQL脚本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3. 替换 SQL 脚本中的内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3.1 将'TO_CLOB(''替换为TO_CLOB('")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3.2 将'')||TO_CLOB(''替换为')||TO_CLOB('")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3.3 将'')',替换为'),")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 4 替换特殊字符& 为 ' || chr(38) || '")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);