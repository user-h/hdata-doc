(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{363:function(e,a,v){"use strict";v.r(a);var t=v(3),o=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("安装hive的前提是先安装hadoop集群，并且hive只需要在hadoop的namenode节点中安装即可，可以不在datanode节点的机器上安装，启动hive的前提是需要hadoop在正常跑着")]),e._v(" "),a("h2",{attrs:{id:"一-先安装mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-先安装mysql"}},[e._v("#")]),e._v(" 一. 先安装MySQL")]),e._v(" "),a("h3",{attrs:{id:"_1-检查卸载mariadb-lib-centos自带mariadb数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-检查卸载mariadb-lib-centos自带mariadb数据库"}},[e._v("#")]),e._v(" 1.检查卸载mariadb-lib(Centos自带mariadb数据库)")]),e._v(" "),a("ul",[a("li",[e._v("检查CentOS的mariadb版本 "),a("code",[e._v("rpm -qa|grep mariadb")])]),e._v(" "),a("li",[e._v("卸载: "),a("code",[e._v("rpm -e mariadb-libs-5.5.60-1.el7_5.x86_64 --nodeps")])])]),e._v(" "),a("h3",{attrs:{id:"_2-安装mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装mysql"}},[e._v("#")]),e._v(" 2.安装MySQL")]),e._v(" "),a("ul",[a("li",[e._v("安装依赖: "),a("code",[e._v("yum install -y libaio numactl perl net-tools")])]),e._v(" "),a("li",[e._v("解压MySQL "),a("code",[e._v("tar -xvf mysql-5.7.18-1.el7.x86_64.rpm-bundle.tar.tar -C /soft/modlue")])]),e._v(" "),a("li",[e._v("安装(注意顺序不能变):\n"),a("ul",[a("li",[a("code",[e._v("rpm -ivh mysql-community-common-5.7.18-1.el7.x86_64.rpm")])]),e._v(" "),a("li",[a("code",[e._v("rpm -ivh mysql-community-libs-5.7.18-1.el7.x86_64.rpm")])]),e._v(" "),a("li",[a("code",[e._v("rpm -ivh mysql-community-client-5.7.18-1.el7.x86_64.rpm")])]),e._v(" "),a("li",[a("code",[e._v("rpm -ivh mysql-community-server-5.7.18-1.el7.x86_64.rpm（依赖于common, client）")])])])])]),e._v(" "),a("h3",{attrs:{id:"_3-初始化并启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-初始化并启动"}},[e._v("#")]),e._v(" 3.初始化并启动")]),e._v(" "),a("ul",[a("li",[e._v("初始化MySQL："),a("code",[e._v("mysqld --initialize")])]),e._v(" "),a("li",[e._v("mysql默认安装在"),a("code",[e._v("/var/lib")]),e._v("下。更改mysql数据库所属于用户及其所属于组:"),a("code",[e._v("chown mysql:mysql /var/lib/mysql -R")])]),e._v(" "),a("li",[e._v("启动MySQL："),a("code",[e._v("systemctl start mysqld.service")])]),e._v(" "),a("li",[e._v("获得初始密码(在/var/log目录)："),a("code",[e._v("grep 'password' mysqld.log")])]),e._v(" "),a("li",[e._v("更改密码:\n"),a("ul",[a("li",[e._v("进入MySQL命令行: "),a("code",[e._v("mysql -u root -p")]),e._v(" 输入刚才获取的初始密码")]),e._v(" "),a("li",[e._v("更改密码:"),a("code",[e._v("set password=password('123456789');")]),e._v(" "),a("code",[e._v("flush privileges;")])]),e._v(" "),a("li",[e._v("注意:这里可能会出现"),a("code",[e._v("Your password does not satisfy the current policy requirements.")]),e._v(" "),a("br"),e._v("可以设置密码强度为LOW:"),a("code",[e._v("set global validate_password_policy=0;")]),e._v(" "),a("br"),e._v("设置密码长度:"),a("code",[e._v("set global validate_password_length=4;")]),e._v("(最少4位)\n"),a("br"),e._v("参考链接:https://blog.csdn.net/maxsky/article/details/51171474")])])]),e._v(" "),a("li",[e._v("授权: "),a("code",[e._v("grant all privileges on *.* to banana@'%' identified by ‘123456789' with grant option;")]),e._v("(最好手打命令,拷贝老出错)")]),e._v(" "),a("li",[e._v("用SQLyog等工具连接  测试")])]),e._v(" "),a("h2",{attrs:{id:"二-安装配置hive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-安装配置hive"}},[e._v("#")]),e._v(" 二.安装配置Hive")]),e._v(" "),a("p",[e._v("下载hive：https://downloads.apache.org/hive/\n"),a("br"),e._v("hadoop2.9.2 + hive-2.3.6")]),e._v(" "),a("blockquote",[a("p",[e._v("Hive的运行模式\n依据Hive的安装和metastore的设置机器，分为下面三个模式：\n嵌入模式：使用自带的derby数据库\n本地模式：将metastore放在mysql，并且mysql和hive安装在同一台机器上\n远程模式：将metastore放在mysql，并且mysql和hive安装在不同一台机器上")])]),e._v(" "),a("h3",{attrs:{id:"_1-解压安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-解压安装"}},[e._v("#")]),e._v(" 1.解压安装")]),e._v(" "),a("ul",[a("li",[e._v("解压到/soft/module: "),a("code",[e._v("tar -zxvf apache-hive-2.3.6-bin.tar.gz -C /soft/module/")])]),e._v(" "),a("li",[e._v("重命名: "),a("code",[e._v("mv apache-hive-2.3.6-bin hive")])])]),e._v(" "),a("h3",{attrs:{id:"_2-文件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-文件配置"}},[e._v("#")]),e._v(" 2.文件配置")]),e._v(" "),a("ol",[a("li",[e._v("配置环境变量(略):"),a("code",[e._v("sudo vim /etc/profile")])]),e._v(" "),a("li",[e._v("hive-env.sh文件(conf目录下),拷贝样例 "),a("code",[e._v("cp hive-env.sh.template hive-env.sh")]),e._v(" "),a("code",[e._v("vim hive-env.sh")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 配置 HADOOP_HOME 路径\nexport HADOOP_HOME=/soft/module/hadoop-2.9.2\n# 配置 HIVE_CONF_DIR 路径\nexport HIVE_CONF_DIR=/soft/module/hive/conf\n\nexport HIVE_AUX_JARS_PATH=/soft/module/hive/lib\n")])])]),a("h3",{attrs:{id:"_3-hadoop集群配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-hadoop集群配置"}},[e._v("#")]),e._v(" 3.Hadoop集群配置")]),e._v(" "),a("ol",[a("li",[e._v("必须启动hdfs和yarn\n"),a("code",[e._v("sbin/start-dfs.sh")]),e._v(" "),a("code",[e._v("sbin/start-yarn.sh")])]),e._v(" "),a("li",[e._v("创建目录\n"),a("strong",[e._v("因为在hive-site.xml中有这样的配置：")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<name>hive.metastore.warehouse.dir</name>\n<value>/user/hive/warehouse</value>\n<name>hive.exec.scratchdir</name>\n<value>/tmp/hive</value>\n")])])]),a("p",[a("strong",[e._v("所以要在集群上新建目录")])]),e._v(" "),a("ul",[a("li",[e._v("在 HDFS 上创建/tmp 和/user/hive/warehouse 两个目录(可不操作，系统会自动创建)\n"),a("br"),a("code",[e._v("hadoop fs -mkdir /tmp")]),e._v(" "),a("code",[e._v("hadoop fs -mkdir -p /user/hive/warehouse")])]),e._v(" "),a("li",[e._v("并修改他们的同组权限可写\n"),a("br"),a("code",[e._v("hadoop fs -chmod g+w /tmp")]),e._v(" "),a("code",[e._v("hadoop fs -chmod g+w /user/hive/warehouse")])])]),e._v(" "),a("h3",{attrs:{id:"_4-hive-元数据配置到-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-hive-元数据配置到-mysql"}},[e._v("#")]),e._v(" 4.Hive 元数据配置到 MySql")]),e._v(" "),a("ol",[a("li",[e._v("驱动拷贝\n"),a("strong",[e._v("拷贝 mysql-connector-java-5.1.48.jar 到/soft/module/hive/lib/\n"),a("code",[e._v("cp mysql-connector-java-5.1.48.jar /soft/module/hive/lib/")])])]),e._v(" "),a("li",[e._v("配置 Metastore 到 MySql")])]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("在/opt/module/hive/conf 目录下修改 hive-site.xml "),a("code",[e._v("vim hive-site.xml")])])]),e._v(" "),a("li",[a("strong",[e._v("根据官方文档配置参数，拷贝数据到 hive-site.xml 文件中")]),e._v("\nhttps://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<?xml version="1.0"?>\n<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n<configuration>\n    \x3c!--将该name对应的value修改为MySQL的地址--\x3e\n    <property>\n        <name>javax.jdo.option.ConnectionURL</name>\n        <value>jdbc:mysql://hadoop100:3306/metastore?createDatabaseIfNotExist=true&amp;characterEncoding=UTF-8&amp;useSSL=false</value>\n        \x3c!-- 有同学时区报错, 需加上 &amp;serverTimezone=GMT%2B8 --\x3e\n        <description>JDBC connect string for a JDBC metastore</description>\n    </property>\n    \x3c!--将该name对应的value修改为MySQL驱动类路径：--\x3e\n    <property>\n        <name>javax.jdo.option.ConnectionDriverName</name>\n        <value>com.mysql.jdbc.Driver</value>\n        <description>Driver class name for a JDBC metastore</description>\n    </property>\n    \x3c!--将对应的value修改为MySQL数据库登录名--\x3e\n    <property>\n        <name>javax.jdo.option.ConnectionUserName</name>\n        <value>root</value>\n        <description>username to use against metastore database</description>\n    </property>\n    \x3c!--将对应的value修改为MySQL数据库的登录密码--\x3e\n    <property>\n        <name>javax.jdo.option.ConnectionPassword</name>\n        <value>123456789</value>\n        <description>password to use against metastore database</description>\n    </property>\n</configuration>\n')])])]),a("p",[e._v("2.1 第三步和第四步不做行吗??? 或者加上???(我自己没做3,4步)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<property>\n   <name>system:java.io.tmpdir</name>\n   <value>/soft/module/hive/tmpdir</value>\n</property>\n \n<property>\n     <name>system:user.name</name>\n     <value>root</value>\n</property>\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("修改hive-site.xml中的临时目录\n将hive-site.xml文件中的"),a("code",[e._v("${system:java.io.tmpdir}")]),e._v("替换为hive的临时目录，例如我替换为"),a("code",[e._v("/soft/module/hive/tmp/")]),e._v("，该目录如果不存在则要自己手工创建，并且赋予读写权限。")]),e._v(" "),a("li",[e._v("将配置文件中"),a("code",[e._v("${system:user.name}")]),e._v("都替换为"),a("code",[e._v("root")])]),e._v(" "),a("li",[a("strong",[e._v("配置完毕后，如果启动 hive 异常，可以重新启动虚拟机。（重启后，别忘了启\n动 hadoop 集群）")])])]),e._v(" "),a("h3",{attrs:{id:"_5-启动和测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-启动和测试"}},[e._v("#")]),e._v(" 5.启动和测试")]),e._v(" "),a("p",[e._v("https://www.jianshu.com/p/7b1b21bf05c2")]),e._v(" "),a("blockquote",[a("p",[e._v("1、关闭防火墙\n2、开启 mysql外链权限\n3、jar包冲突，删除hive下\n4、配置hive-site.xml")])]),e._v(" "),a("ul",[a("li",[e._v("初始化数据库："),a("code",[e._v("cd $HIVE_HOME/bin")]),e._v(" "),a("code",[e._v("schematool -initSchema -dbType mysql")])]),e._v(" "),a("li",[e._v("启动Hive: "),a("code",[e._v("cd $HIVE_HOME/bin")]),e._v(" 进入Hive的bin目录"),a("code",[e._v("./hive")]),e._v(" 执行hive启动")]),e._v(" "),a("li",[e._v("测试Hive\n"),a("ul",[a("li",[e._v("简单测试"),a("code",[e._v("show functions;")]),e._v(" "),a("code",[e._v("desc function sum;")])]),e._v(" "),a("li",[e._v("连接测试\n"),a("br"),e._v("在成功建立连接后，进入mysql数据库，会发现多了一个metastore数据库，这个数据库就是用来存储hive的元数据信息。")]),e._v(" "),a("li",[e._v("执行新建库\n"),a("code",[e._v("show databases;")]),e._v(" "),a("code",[e._v("create database test_db;")]),e._v(" "),a("code",[e._v("use test_db;")]),e._v(" "),a("code",[e._v("show tables;")]),e._v(" "),a("code",[e._v("create table student(id int,name string) row format delimited fields terminated by '\\t';")]),e._v(" "),a("code",[e._v("load data local inpath '/soft/module/hive/student.txt' into table student;")]),e._v(" "),a("code",[e._v('insert into student values(1000,"ss");')])]),e._v(" "),a("li",[e._v("Hadoop的HDFS页面上查看")]),e._v(" "),a("li",[e._v("MySQL的hive数据库中查看(可视化工具)")])])])]),e._v(" "),a("hr"),e._v(" "),a("ol",[a("li",[e._v("关闭\n可以通过"),a("code",[e._v("ps -ef|grep hive")]),e._v(" 来看hive 的端口号，然后kill 掉相关的进程。")]),e._v(" "),a("li",[e._v("启动\n命令\n"),a("code",[e._v("hive --service metastore &")]),e._v(" "),a("code",[e._v("hive --service hiveserver2 &")]),e._v(" "),a("code",[e._v("nohup hive --service metastore 2>&1 &")]),a("br"),e._v("\n用来启动metastore\n"),a("code",[e._v("nohup hive --service hiveserver2 2>&1 &")]),e._v("\n用来启动hiveserver2\n可以通过查看日志，来确认是否正常启动。\n注意！如果 hiveserver2 不启动，jdbc将无法正常连接")])]),e._v(" "),a("h3",{attrs:{id:"_6-hive基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-hive基本操作"}},[e._v("#")]),e._v(" 6.Hive基本操作")]),e._v(" "),a("ul",[a("li",[e._v("启动 hive "),a("code",[e._v("bin/hive")])]),e._v(" "),a("li",[e._v("查看数据库"),a("code",[e._v("hive> show databases;")])]),e._v(" "),a("li",[e._v("打开默认数据库 "),a("code",[e._v("hive> use default;")])]),e._v(" "),a("li",[e._v("显示 default 数据库中的表"),a("code",[e._v("hive> show tables;")])]),e._v(" "),a("li",[e._v("创建一张表"),a("code",[e._v("hive> create table student(id int, name string);")])]),e._v(" "),a("li",[e._v("显示数据库中有几张表"),a("code",[e._v("hive> show tables;")])]),e._v(" "),a("li",[e._v("查看表的结构"),a("code",[e._v("hive> desc student;")])]),e._v(" "),a("li",[e._v("向表中插入数据"),a("code",[e._v('hive> insert into student values(1000,"ss");')])]),e._v(" "),a("li",[e._v("查询表中数据"),a("code",[e._v("hive> select * from student;")])]),e._v(" "),a("li",[e._v("退出 hive  "),a("code",[e._v("hive> quit;")])]),e._v(" "),a("li",[e._v("清空表 "),a("code",[e._v("truncate table student;")])]),e._v(" "),a("li",[e._v("导入数据三种方式(数据间以tab分隔)\n"),a("ul",[a("li",[e._v("hadoop -put方式: "),a("code",[e._v("hadoop fs -put student.txt /user/hive/warehouse/test_db.db/student")])]),e._v(" "),a("li",[e._v("hive命令行(本地): "),a("code",[e._v("load data local inpath '/soft/module/hive/student.txt' into table student;")])]),e._v(" "),a("li",[e._v("hive命令行(hdfs): "),a("code",[e._v("load data inpath 'hdfs路径(user/...)' into table student;")])])])])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"三-java-api环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-java-api环境准备"}},[e._v("#")]),e._v(" 三. java API环境准备")]),e._v(" "),a("h3",{attrs:{id:"_1-centos7启动服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-centos7启动服务"}},[e._v("#")]),e._v(" 1. centos7启动服务")]),e._v(" "),a("ul",[a("li",[e._v("修改hadoop配置"),a("code",[e._v("vim core-site.xml")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<property>\n    <name>hadoop.proxyuser.root.groups</name>\n    <value>*</value>   \n</property>  \n<property>      \n    <name>hadoop.proxyuser.root.hosts</name>\n    <value>*</value>\n</property>\n")])])]),a("p",[a("strong",[a("span",{staticStyle:{color:"red"}},[e._v("分发文件")])])]),e._v(" "),a("ul",[a("li",[e._v("启动命令 "),a("code",[e._v("/soft/module/hive/bin/hive --service hiveserver2 &")]),e._v("(在native的namenode启动)\n"),a("br"),e._v("命令启动后挂起,两种方式解决这种不便:\n"),a("ul",[a("li",[e._v("重新打开一个xshell连接，做其他的Linux命令操作，服务启动的会话保留")]),e._v(" "),a("li",[e._v("使用Linux nohup命令，可以防止服务启动挂起"),a("code",[e._v("nohup:ignoring input and appending output to 'nohup.out'")]),e._v("\n它会将服务启动的日志输出到当前目录下的nohup.out文件内，我们查看下内容"),a("code",[e._v("cat nohup.out")])]),e._v(" "),a("li",[e._v("启动后用jps"),a("code",[e._v("RunJar进程")]),e._v("或在UI界面查看")])])])]),e._v(" "),a("h3",{attrs:{id:"_2-eclipse配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-eclipse配置"}},[e._v("#")]),e._v(" 2. eclipse配置")]),e._v(" "),a("p",[e._v("-jar包配置\n- 挑选必须的jar包，编辑成自己的lib配置到工程中（推荐）\n其实所有jar包都在${HIVE_HOME}/lib目录下，这里列示下需要的jar包名：\n${HADOOP_HOME}/share/hadoop/common/hadoop-common-2.2.0.jar(mr工程中已存在，无需再次添加，如果新建项目需配置\n$ { HIVE_HOME } /lib/hive-exec-0.11.0.jar\n$ { HIVE_HOME } /lib/hive-jdbc-0.11.0.jar\n$ { HIVE_HOME } /lib/hive-metastore-0.11.0.jar\n$ { HIVE_HOME } /lib/hive-service-0.11.0.jar\n$ { HIVE_HOME } /lib/libfb303-0.9.0.jar\n$ { HIVE_HOME } /lib/commons-logging-1.0.4.jar （此jar包已经存在就不要再次添加）\n$ { HIVE_HOME } /lib/slf4j-api-1.6.1.jar（此jar包已经存在就不要再次添加）\n- 导入jar包\n- 修改pom.xml配置文件（不推荐，会下载额外很多无用包，而且时间很长在1小时左右）")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<dependency>\n    <groupId>org.apache.hive</groupId>\n    <artifactId>hive-jdbc</artifactId>\n    <version>2.3.6</version>\n</dependency>\n")])])]),a("h3",{attrs:{id:"附-一个错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附-一个错误"}},[e._v("#")]),e._v(" 附:一个错误")]),e._v(" "),a("ul",[a("li",[e._v("User: banana is not allowed to impersonate root\n修改配置文件core-site.xml")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<property>\n    <name>hadoop.proxyuser.banana.groups</name>\n    <value>*</value>   \n</property>  \n<property>      \n    <name>hadoop.proxyuser.banana.hosts</name>\n    <value>*</value>\n</property>\n")])])]),a("ul",[a("li",[e._v("User: banana is not allowed to impersonate banana\n"),a("br"),e._v("这个应该是没在active的namenode上启动的原因,\n但我自己就是在active上启动的啊,namenode总会莫名挂掉,最后直接把另一个namenode kill掉,就好使了\n"),a("br"),e._v("忘记分发文件"),a("code",[e._v("core-site.xml")]),e._v("两天了!!!!!!!!!!")])])])}),[],!1,null,null,null);a.default=o.exports}}]);