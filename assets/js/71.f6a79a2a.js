(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{402:function(_,v,t){"use strict";t.r(v);var e=t(3),d=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"历史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#历史"}},[_._v("#")]),_._v(" 历史")]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("最初的正则表达式出现于理论计算机科学的自动控制理论和形式化语言理论中。在这些领域中有对计算（自动控制）的模型和对形式化语言描述与分类的研究。")]),_._v(" "),v("p",[_._v("1940年，沃伦·麦卡洛克与沃尔特·皮茨将神经系统中的神经元描述成小而简单的自动控制元。")]),_._v(" "),v("p",[_._v("1950年代，数学家斯蒂芬·科尔·克莱尼利用称之为“正则集合”的数学符号来描述此模型。肯·汤普逊将此符号系统引入编辑器QED，随后是Unix上的编辑器ed，并最终引入grep。自此以后，正则表达式被广泛地应用于各种Unix或类Unix系统的工具中。正则表达式的POSIX规范，分为基本型正则表达式（Basic Regular Expression，BRE）和扩展型正则表达式（Extended Regular Express，ERE）两大流派。在兼容POSIX的UNIX系统上，grep和egrep之类的工具都遵循POSIX规范，一些数据库系统中的正则表达式也匹配POSIX规范。grep、vi、sed都属于BRE，是历史最早的正则表达式，因此元字符必须转译之后才具有特殊含义。egrep、awk则属于ERE，元字符不用转译")]),_._v(" "),v("p",[_._v("Perl的正则表达式源自于Henry Spencer于1986年1月19日发布的regex，它已经演化成了PCRE（Perl兼容正则表达式，Perl Compatible Regular Expressions），一个由Philip Hazel开发的，为很多现代工具所使用的库。")]),_._v(" "),v("p",[_._v("来源："),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[_._v("维基百科"),v("OutboundLink")],1)]),_._v(" "),v("h2",{attrs:{id:"posix规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#posix规范"}},[_._v("#")]),_._v(" POSIX规范")]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("POSIX的全称是Portable Operating System Interface for unix. 分为BRE(基本型正则表达式)和ERE(扩展型正则表达式)两大流派。")]),_._v(" "),v("p",[v("strong",[_._v("BRE流派")])]),_._v(" "),v("p",[_._v("Linux下的vi、grep、sed工具属于BRE这一派，BRE中元字符(、)、{、}必须转义之后才具有特殊意义，比如a{1,2}才能匹配字符串a或aa。")]),_._v(" "),v("p",[_._v("BRE不支持+、?量词，多选结构和反向引用\\1、\\2。")]),_._v(" "),v("p",[_._v("GNU对BRE做了扩展，使之支持+、?、|，但使用时需转义。也支持\\1、\\2之类的反向引用。")]),_._v(" "),v("p",[v("strong",[_._v("ERE流派")])]),_._v(" "),v("p",[_._v("Linux下的egrep、awk属于ERE流派。这一流派中使用元字符时不用转义，支持量词等。")]),_._v(" "),v("p",[_._v("现在的BRE和ERE的主要差异是元字符是否需转义。")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("正则表达式特性")]),_._v(" "),v("th",[_._v("BREs")]),_._v(" "),v("th",[_._v("EREs")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("点号、^、$、[...]、[^...]")])]),_._v(" "),v("td",[_._v("√")]),_._v(" "),v("td",[_._v("√")])]),_._v(" "),v("tr",[v("td",[_._v("“任意数目”量词")]),_._v(" "),v("td",[v("code",[_._v("*")])]),_._v(" "),v("td",[v("code",[_._v("*")])])]),_._v(" "),v("tr",[v("td",[_._v("+ 和 ? 量词")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("+、?")])]),_._v(" "),v("tr",[v("td",[_._v("区间量词")]),_._v(" "),v("td",[v("code",[_._v("\\{min, max\\}")])]),_._v(" "),v("td",[v("code",[_._v("{min, max}")])])]),_._v(" "),v("tr",[v("td",[_._v("分组")]),_._v(" "),v("td",[v("code",[_._v("\\(...\\)")])]),_._v(" "),v("td",[v("code",[_._v("(...)")])])]),_._v(" "),v("tr",[v("td",[_._v("量词可否作用于括号")]),_._v(" "),v("td",[_._v("√")]),_._v(" "),v("td",[_._v("√")])]),_._v(" "),v("tr",[v("td",[_._v("反向引用")]),_._v(" "),v("td",[_._v("\\1到\\9")]),_._v(" "),v("td")]),_._v(" "),v("tr",[v("td",[_._v("多选结构")]),_._v(" "),v("td"),_._v(" "),v("td",[_._v("√")])])])]),_._v(" "),v("p",[v("a",{attrs:{href:"https://blog.csdn.net/Code_Thinking/article/details/39104135",target:"_blank",rel:"noopener noreferrer"}},[_._v("原文链接"),v("OutboundLink")],1)]),_._v(" "),v("h3",{attrs:{id:"posix字符组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#posix字符组"}},[_._v("#")]),_._v(" POSIX字符组")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("POSIX字符组")]),_._v(" "),v("th",[_._v("说明")]),_._v(" "),v("th",[_._v("ASCII环境")]),_._v(" "),v("th",[_._v("Unicode环境")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[v("code",[_._v("[:alnum:]")])]),_._v(" "),v("td",[_._v("字母字符和数字字符")]),_._v(" "),v("td",[v("code",[_._v("[a-zA-Z0-9]")])]),_._v(" "),v("td",[v("code",[_._v("[\\p{L&}\\p{Nd}]")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:alpha:]")])]),_._v(" "),v("td",[_._v("字母")]),_._v(" "),v("td",[v("code",[_._v("[a-zA-Z]")])]),_._v(" "),v("td",[v("code",[_._v("\\p{L&}")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:ascii:]")])]),_._v(" "),v("td",[_._v("ASCII字符")]),_._v(" "),v("td",[v("code",[_._v("[\\x00-\\x7F]")])]),_._v(" "),v("td",[v("code",[_._v("\\p{InBasicLatin}")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:blank:]")])]),_._v(" "),v("td",[_._v("空格字符和制表符")]),_._v(" "),v("td",[v("code",[_._v("[ \\t]")])]),_._v(" "),v("td",[v("code",[_._v("[\\p{Zs}\\t]")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:cntrl:]")])]),_._v(" "),v("td",[_._v("控制字符")]),_._v(" "),v("td",[v("code",[_._v("[\\x00-\\x1F\\x7F]")])]),_._v(" "),v("td",[v("code",[_._v("\\p{Cc}")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:digit:]")])]),_._v(" "),v("td",[_._v("数字字符")]),_._v(" "),v("td",[v("code",[_._v("[0-9]")])]),_._v(" "),v("td",[v("code",[_._v("\\p{Nd}")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:graph:]")])]),_._v(" "),v("td",[_._v("空白字符之外的字符")]),_._v(" "),v("td",[v("code",[_._v("[\\x21-\\x7E]")])]),_._v(" "),v("td",[v("code",[_._v("[^\\p{Z}\\p{C}]")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:lower:]")])]),_._v(" "),v("td",[_._v("小写字母字符")]),_._v(" "),v("td",[v("code",[_._v("[a-z]")])]),_._v(" "),v("td",[v("code",[_._v("\\p{Ll}")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:print:]")])]),_._v(" "),v("td",[_._v("类似"),v("code",[_._v("[:graph:]")]),_._v("，但包括空白字符")]),_._v(" "),v("td",[v("code",[_._v("[\\x20-\\x7E]")])]),_._v(" "),v("td",[v("code",[_._v("\\P{C}")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:punct:]")])]),_._v(" "),v("td",[_._v("标点符号")]),_._v(" "),v("td",[v("code",[_._v("[][!\"#$%&'()*+,./:;<=>?@\\^_{|}~-]")])]),_._v(" "),v("td",[v("code",[_._v("[\\p{P}\\p{S}]")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:space:]")])]),_._v(" "),v("td",[_._v("空白字符")]),_._v(" "),v("td",[v("code",[_._v("[\\t\\r\\n\\v\\f]")])]),_._v(" "),v("td",[v("code",[_._v("[\\p{Z}\\t\\r\\n\\v\\f]")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:upper:]")])]),_._v(" "),v("td",[_._v("大写字母字符")]),_._v(" "),v("td",[v("code",[_._v("[A-Z]")])]),_._v(" "),v("td",[v("code",[_._v("\\p{Lu}")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:word:]")])]),_._v(" "),v("td",[_._v("字母字符")]),_._v(" "),v("td",[v("code",[_._v("[A-Za-z0-9_]")])]),_._v(" "),v("td",[v("code",[_._v("[\\p{L}\\p{N}\\p{Pc}]")])])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:xdigit:]")])]),_._v(" "),v("td",[_._v("十六进制字符")]),_._v(" "),v("td",[v("code",[_._v("[A-Fa-f0-9]")])]),_._v(" "),v("td",[v("code",[_._v("[A-Fa-f0-9]")])])])])]),_._v(" "),v("h3",{attrs:{id:"unicode处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#unicode处理"}},[_._v("#")]),_._v(" Unicode处理")]),_._v(" "),v("p",[_._v("在.NET、Java、JavaScript、Python的正则表达式中，可以用"),v("code",[_._v("\\uXXXX")]),_._v("表示一个Unicode字符，其中"),v("code",[_._v("XXXX")]),_._v("为四位16进制数字。")]),_._v(" "),v("p",[_._v("Unicode字符的三种性质：")]),_._v(" "),v("ul",[v("li",[_._v("Unicode Property：字符属于标点、空格、字母等等。每个Unicode字符只能属于唯一Unicode Property。.NET、Java、PHP和Ruby等语言支持。具体分类为：\n"),v("ul",[v("li",[_._v("字符"),v("code",[_._v("\\p{L}")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\p{Ll}")]),_._v("或"),v("code",[_._v("\\p{Lowercase_Letter}")]),_._v("：小写字符（必须有大写的形式）。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Lu}")]),_._v("或"),v("code",[_._v("\\p{Uppercase_Letter}")]),_._v("：大写字符（必须有小写的形式）。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Lt}")]),_._v("或"),v("code",[_._v("\\p{Titlecase_Letter}")]),_._v("：全词首字母大写的字符。")]),_._v(" "),v("li",[v("code",[_._v("\\p{L&}")]),_._v("或"),v("code",[_._v("\\p{Cased_Letter}")]),_._v("：存在大小写形式的字符（Ll, Lu, Lt的组合）。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Lm}")]),_._v("或"),v("code",[_._v("\\p{Modifier_Letter}")]),_._v("：音标修饰字符。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Lo}")]),_._v("或"),v("code",[_._v("\\p{Other_Letter}")]),_._v("：不具有大小写的字符或字形。")])])]),_._v(" "),v("li",[_._v("附加符号"),v("code",[_._v("\\p{M}")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\p{Mn}")]),_._v("或"),v("code",[_._v("\\p{Non_Spacing_Mark}")]),_._v("：与其他字符结合，不额外占用空间的字符，例如日耳曼语元音变音。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Mc}")]),_._v("或"),v("code",[_._v("\\p{Spacing_Combining_Mark}")]),_._v("：与其他字符结合，额外占用空间的字符，例如马拉雅拉姆文#元音字母及附标)。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Me}")]),_._v("或"),v("code",[_._v("\\p{Enclosing_Mark}")]),_._v("：包含其他字符的字符，例如圆圈、方块。")])])]),_._v(" "),v("li",[_._v("分隔符"),v("code",[_._v("\\p{Z}")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\p{Zs}")]),_._v("或"),v("code",[_._v("\\p{Space_Separator}")]),_._v("：不可见的空格，但占据空间。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Zl}")]),_._v("或"),v("code",[_._v("\\p{Line_Separator}")]),_._v("：分隔线字符U+2028。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Zp}")]),_._v("或"),v("code",[_._v("\\p{Paragraph_Separator}")]),_._v("：分段字符U+2029。")])])]),_._v(" "),v("li",[_._v("符号"),v("code",[_._v("\\p{S}")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\p{Sm}")]),_._v("或"),v("code",[_._v("\\p{Math_Symbol}")]),_._v("：数学符号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Sc}")]),_._v("或"),v("code",[_._v("\\p{Currency_Symbol}")]),_._v("：通货符号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Sk}")]),_._v("或"),v("code",[_._v("\\p{Modifier_Symbol}")]),_._v("：组合为其他字符的符号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{So}")]),_._v("或"),v("code",[_._v("\\p{Other_Symbol}")]),_._v("：其他符号。")])])]),_._v(" "),v("li",[_._v("数值字符"),v("code",[_._v("\\p{N}")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\p{Nd}")]),_._v("或"),v("code",[_._v("\\p{Decimal_Digit_Number}")]),_._v("：所有文本中的数字0至9字符，不含形意符号)。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Nl}")]),_._v("或"),v("code",[_._v("\\p{Letter_Number}")]),_._v("：看起来像字母的符号，包含罗马数字。")]),_._v(" "),v("li",[v("code",[_._v("\\p{No}")]),_._v("或"),v("code",[_._v("\\p{Other_Number}")]),_._v("：上角标或下角标数字，或者其他不属于0至9的数字。不含形意符号。")])])]),_._v(" "),v("li",[_._v("标点符号"),v("code",[_._v("\\p{P}")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("\\p{Pd}")]),_._v("或"),v("code",[_._v("\\p{Dash_Punctuation}")]),_._v("：任何种类的连字号或连接号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Ps}")]),_._v("或"),v("code",[_._v("\\p{Open_Punctuation}")]),_._v("：任何种类开括号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Pe}")]),_._v("或"),v("code",[_._v("\\p{Close_Punctuation}")]),_._v("：任何种类闭括号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Pi}")]),_._v("或"),v("code",[_._v("\\p{Initial_Punctuation}")]),_._v("：任何种类开引号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Pf}")]),_._v("或"),v("code",[_._v("\\p{Final_Punctuation}")]),_._v("：任何种类闭引号。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Pc}")]),_._v("或"),v("code",[_._v("\\p{Connector_Punctuation}")]),_._v("：连接词的标点符号，如下划线。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Po}")]),_._v("或"),v("code",[_._v("\\p{Other_Punctuation}")]),_._v("：其他标点符号。")])])]),_._v(" "),v("li",[_._v("其它符号"),v("code",[_._v("\\p{C}")]),_._v("（包括不可见控制字符与未用码位）\n"),v("ul",[v("li",[v("code",[_._v("\\p{Cc}")]),_._v("或"),v("code",[_._v("\\p{Control}")]),_._v("：ASCII或Latin-1控制字符"),v("code",[_._v("0x00-0x1F")]),_._v("与"),v("code",[_._v("0x7F-0x9F")]),_._v("。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Cf}")]),_._v("或"),v("code",[_._v("\\p{Format}")]),_._v("：不可见的格式化指示字符。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Co}")]),_._v("或"),v("code",[_._v("\\p{Private_Use}")]),_._v("：私用码位。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Cs}")]),_._v("或"),v("code",[_._v("\\p{Surrogate}")]),_._v("：UTF-16编码的代理对的一半。")]),_._v(" "),v("li",[v("code",[_._v("\\p{Cn}")]),_._v("或"),v("code",[_._v("\\p{Unassigned}")]),_._v("：未被使用的码位。")])])])])]),_._v(" "),v("li",[_._v("Unicode Block：按照编码区间划分Unicode字符，每个Unicode Block中的字符编码属于一个编码区间。例如Java语言"),v("code",[_._v("\\p{ InCJK_Compatibility_Ideographs }")]),_._v("，.NET语言"),v("code",[_._v("\\p{IsCJK_Compatibility_Ideographs}")]),_._v("。")]),_._v(" "),v("li",[_._v("Unicode Script：按照字符所属的书写系统来划分Unicode字符。PHP和Ruby（版本不低于1.9）支持Unicode Script。例如"),v("code",[_._v("\\p{Han}")]),_._v("表示汉字（中文字符）。")])]),_._v(" "),v("p",[_._v("这三种Unicode性质对应的字符组补集是将开头的"),v("code",[_._v("\\p")]),_._v("改为"),v("code",[_._v("\\P")]),_._v("，其它不变。")]),_._v(" "),v("h2",{attrs:{id:"优先级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优先级"}},[_._v("#")]),_._v(" 优先级")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("优先权")]),_._v(" "),v("th",[_._v("符号")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("最高")]),_._v(" "),v("td",[_._v("\\")])]),_._v(" "),v("tr",[v("td",[_._v("高")]),_._v(" "),v("td",[v("code",[_._v("()")]),_._v("、"),v("code",[_._v("(?:)")]),_._v("、"),v("code",[_._v("(?=)")]),_._v("、"),v("code",[_._v("[]")])])]),_._v(" "),v("tr",[v("td",[_._v("中")]),_._v(" "),v("td",[v("code",[_._v("*")]),_._v("、"),v("code",[_._v("+")]),_._v("、"),v("code",[_._v("?")]),_._v("、"),v("code",[_._v("{n}")]),_._v("、"),v("code",[_._v("{n,}")]),_._v("、"),v("code",[_._v("{n,m}")])])]),_._v(" "),v("tr",[v("td",[_._v("低")]),_._v(" "),v("td",[v("code",[_._v("^")]),_._v("、"),v("code",[_._v("$")]),_._v("、中介字符")])]),_._v(" "),v("tr",[v("td",[_._v("次最低")]),_._v(" "),v("td",[_._v("串接，即相邻字符连接在一起")])]),_._v(" "),v("tr",[v("td",[_._v("最低")]),_._v(" "),v("td",[v("code",[_._v("|")])])])])]),_._v(" "),v("h2",{attrs:{id:"语系对正规表示法的影响"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#语系对正规表示法的影响"}},[_._v("#")]),_._v(" 语系对正规表示法的影响")]),_._v(" "),v("p",[_._v("既然正规表示法是处理字符串的一种表示方式，那么对字符排序有影响的语系数据就会对正规表示法的结果有影响！")]),_._v(" "),v("p",[_._v("为什么语系的数据会影响到正规表示法的输出结果呢？我们在第零章计算器概论的文字编码系统里面谈到，文件其实记录的仅有 0 与 1，我们看到的字符文字与数字都是透过编码表转换来的。由于不同语系的编码数据并不相同，所以就会造成数据撷取结果的差异了。 举例来说，在英文大小写的编码顺序中，zh_TW.big5 及 C 这两种语系的输出结果分别如下：\n")]),_._v(" "),v("ul",[v("li",[_._v("LANG=C 时：0 1 2 3 4 ... A B C D ... Z a b c d ...z")]),_._v(" "),v("li",[_._v("LANG=zh_TW 时：0 1 2 3 4 ... a A b B c C d D ... z Z")])]),_._v(" "),v("p",[_._v("上面的顺序是编码的顺序，我们可以很清楚的发现这两种语系明显就是不一样！如果你想要撷取大写字符而使用 [A-Z] 时， 会发现 LANG=C 确实可以仅捉到大写字符 (因为是连续的) ，但是如果LANG=zh_TW.big5 时，就会发现到， 连同小写的 b-z 也会被撷取出来！因为就编码的顺序来看，big5 语系可以撷取到『 A b B c C ... z Z 』这一堆字符哩！ "),v("strong",[_._v("所以，使用正规表示法时，需要特别留意当时环境的语系为何， 否则可能会发现与别人不相同的撷取结果喔！")])]),_._v(" "),v("p",[_._v("由于一般我们在练习正规表示法时，使用的是兼容于 POSIX 的标准，因此就使用『 C 』这个语系！ 因此，底下的很多练习都是使用『 LANG=C 』这个语系数据来进行的喔！ 另外，为了要避免这样编码所造成的英文与数字的撷取问题，因此有些特殊的符号我们得要了解一下的！ 这些符号主要有底下这些意义：")]),_._v(" "),v("h2",{attrs:{id:"正则表达式基本语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式基本语法"}},[_._v("#")]),_._v(" 正则表达式基本语法")]),_._v(" "),v("hr"),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("字符")]),_._v(" "),v("th",[_._v("描述")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("\\")]),_._v(" "),v("td",[_._v("将下一个字符标记为一个特殊字符（File Format Escape，清单见本表）、或一个原义字符（Identity Escape，有"),v("code",[_._v("^$()*+?.[\\{|")]),_._v("共计12个）、或一个向后引用（backreferences）、或一个八进制转义符。例如，“"),v("code",[_._v("n")]),_._v("”匹配字符“"),v("code",[_._v("n")]),_._v("”。“"),v("code",[_._v("\\n")]),_._v("”匹配一个换行符。序列“"),v("code",[_._v("\\\\")]),_._v("”匹配“"),v("code",[_._v("\\")]),_._v("”而“"),v("code",[_._v("\\(")]),_._v("”则匹配“"),v("code",[_._v("(")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("^")])]),_._v(" "),v("td",[_._v("匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“"),v("code",[_._v("\\n")]),_._v("”或“"),v("code",[_._v("\\r")]),_._v("”之后的位置。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("$")])]),_._v(" "),v("td",[_._v("匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“"),v("code",[_._v("\\n")]),_._v("”或“"),v("code",[_._v("\\r")]),_._v("”之前的位置。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("*")])]),_._v(" "),v("td",[_._v("匹配前面的子表达式零次或多次。例如，"),v("code",[_._v("zo*")]),_._v("能匹配“"),v("code",[_._v("z")]),_._v("”、“"),v("code",[_._v("zo")]),_._v("”以及“"),v("code",[_._v("zoo")]),_._v("”。"),v("code",[_._v("*")]),_._v("等价于{0,}。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("+")])]),_._v(" "),v("td",[_._v("匹配前面的子表达式一次或多次。例如，“"),v("code",[_._v("zo+")]),_._v("”能匹配“"),v("code",[_._v("zo")]),_._v("”以及“"),v("code",[_._v("zoo")]),_._v("”，但不能匹配“"),v("code",[_._v("z")]),_._v("”。+等价于{1,}。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("?")])]),_._v(" "),v("td",[_._v("匹配前面的子表达式零次或一次。例如，“"),v("code",[_._v("do(es)?")]),_._v("”可以匹配“"),v("code",[_._v("does")]),_._v("”中的“"),v("code",[_._v("do")]),_._v("”和“"),v("code",[_._v("does")]),_._v("”。?等价于{0,1}。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("{n}")])]),_._v(" "),v("td",[_._v("n是一个非负整数。匹配确定的n次。例如，“"),v("code",[_._v("o{2}")]),_._v("”不能匹配“"),v("code",[_._v("Bob")]),_._v("”中的“"),v("code",[_._v("o")]),_._v("”，但是能匹配“"),v("code",[_._v("food")]),_._v("”中的两个o。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("{n,}")])]),_._v(" "),v("td",[_._v("n是一个非负整数。至少匹配n次。例如，“"),v("code",[_._v("o{2,}")]),_._v("”不能匹配“"),v("code",[_._v("Bob")]),_._v("”中的“"),v("code",[_._v("o")]),_._v("”，但能匹配“"),v("code",[_._v("foooood")]),_._v("”中的所有o。“"),v("code",[_._v("o{1,}")]),_._v("”等价于“"),v("code",[_._v("o+")]),_._v("”。“"),v("code",[_._v("o{0,}")]),_._v("”则等价于“"),v("code",[_._v("o*")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("{n,m}")])]),_._v(" "),v("td",[_._v("m和n均为非负整数，其中n<=m。最少匹配n次且最多匹配m次。例如，“"),v("code",[_._v("o{1,3}")]),_._v("”将匹配“"),v("code",[_._v("fooooood")]),_._v("”中的前三个o。“"),v("code",[_._v("o{0,1}")]),_._v("”等价于“"),v("code",[_._v("o?")]),_._v("”。请注意在逗号和两个数之间不能有空格。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("?")])]),_._v(" "),v("td",[_._v("非贪心量化（Non-greedy quantifiers）：当该字符紧跟在任何一个其他重复修饰符"),v("code",[_._v("（*,+,?，{n}，{n,}，{n,m}）")]),_._v("后面时，匹配模式是"),v("strong",[_._v("非")]),_._v("贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“"),v("code",[_._v("oooo")]),_._v("”，“"),v("code",[_._v("o+?")]),_._v("”将匹配单个“"),v("code",[_._v("o")]),_._v("”，而“"),v("code",[_._v("o+")]),_._v("”将匹配所有“"),v("code",[_._v("o")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v(".")])]),_._v(" "),v("td",[_._v("匹配除“"),v("code",[_._v("\\r")]),_._v("”“"),v("code",[_._v("\\n")]),_._v("”之外的任何单个字符。要匹配包括“"),v("code",[_._v("\\r")]),_._v("”“"),v("code",[_._v("\\n")]),_._v("”在内的任何字符，请使用像“"),v("code",[_._v("(.|\\r|\\n)")]),_._v("”的模式。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("(pattern)")])]),_._v(" "),v("td",[_._v("匹配pattern并获取这一匹配的子字符串。该子字符串用于向后引用。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“"),v("code",[_._v("\\(")]),_._v("”或“"),v("code",[_._v("\\)")]),_._v("”。可带数量后缀。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("(?:pattern)")])]),_._v(" "),v("td",[_._v("匹配pattern但不获取匹配的子字符串（shy groups），也就是说这是一个非获取匹配，不存储匹配的子字符串用于向后引用。这在使用或字符“"),v("code",[_._v("(|)")]),_._v("”来组合一个模式的各个部分是很有用。例如“"),v("code",[_._v("industr(?:y|ies)")]),_._v("”就是一个比“"),v("code",[_._v("industry|industries")]),_._v("”更简略的表达式。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("(?=pattern)")])]),_._v(" "),v("td",[_._v("正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“"),v("code",[_._v("Windows(?=95|98|NT|2000)")]),_._v("”能匹配“"),v("code",[_._v("Windows2000")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”，但不能匹配“"),v("code",[_._v("Windows3.1")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("(?!pattern)")])]),_._v(" "),v("td",[_._v("正向否定预查（negative assert），在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“"),v("code",[_._v("Windows(?!95|98|NT|2000)")]),_._v("”能匹配“"),v("code",[_._v("Windows3.1")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”，但不能匹配“"),v("code",[_._v("Windows2000")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("(?<=pattern)")])]),_._v(" "),v("td",[_._v("反向（look behind）肯定预查，与正向肯定预查类似，只是方向相反。例如，“"),v("code",[_._v("(?<=95|98|NT|2000)Windows")]),_._v("”能匹配“"),v("code",[_._v("2000Windows")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”，但不能匹配“"),v("code",[_._v("3.1Windows")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("(?<!pattern)")])]),_._v(" "),v("td",[_._v("反向否定预查，与正向否定预查类似，只是方向相反。例如“"),v("code",[_._v("(?<!95|98|NT|2000)Windows")]),_._v("”能匹配“"),v("code",[_._v("3.1Windows")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”，但不能匹配“"),v("code",[_._v("2000Windows")]),_._v("”中的“"),v("code",[_._v("Windows")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("x|y")])]),_._v(" "),v("td",[_._v("没有包围在()里，其范围是整个正则表达式。例如，“"),v("code",[_._v("z|food")]),_._v("”能匹配“"),v("code",[_._v("z")]),_._v("”或“"),v("code",[_._v("food")]),_._v("”。“"),v("code",[_._v("(?:z|f)ood")]),_._v("”则匹配“"),v("code",[_._v("zood")]),_._v("”或“"),v("code",[_._v("food")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[xyz]")])]),_._v(" "),v("td",[_._v("字符集合（character class）。匹配所包含的任意一个字符。例如，“"),v("code",[_._v("[abc]")]),_._v("”可以匹配“"),v("code",[_._v("plain")]),_._v("”中的“"),v("code",[_._v("a")]),_._v("”。特殊字符仅有反斜线\\保持特殊含义，用于转义字符。其它特殊字符如星号、加号、各种括号等均作为普通字符。脱字符^如果出现在首位则表示负值字符集合；如果出现在字符串中间就仅作为普通字符。连字符 - 如果出现在字符串中间表示字符范围描述；如果如果出现在首位（或末尾）则仅作为普通字符。右方括号应转义出现，也可以作为首位字符出现。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[^xyz]")])]),_._v(" "),v("td",[_._v("排除型字符集合（negated character classes）。匹配未列出的任意字符。例如，“"),v("code",[_._v("[^abc]")]),_._v("”可以匹配“"),v("code",[_._v("plain")]),_._v("”中的“"),v("code",[_._v("plin")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[a-z]")])]),_._v(" "),v("td",[_._v("字符范围。匹配指定范围内的任意字符。例如，“"),v("code",[_._v("[a-z]")]),_._v("”可以匹配“"),v("code",[_._v("a")]),_._v("”到“"),v("code",[_._v("z")]),_._v("”范围内的任意小写字母字符。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[^a-z]")])]),_._v(" "),v("td",[_._v("排除型的字符范围。匹配任何不在指定范围内的任意字符。例如，“"),v("code",[_._v("[^a-z]")]),_._v("”可以匹配任何不在“"),v("code",[_._v("a")]),_._v("”到“"),v("code",[_._v("z")]),_._v("”范围内的任意字符。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[:name:]")])]),_._v(" "),v("td",[_._v("增加命名字符类（named character class）。只能用于"),v("strong",[_._v("方括号表达式")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[=elt=]")])]),_._v(" "),v("td",[_._v("增加当前locale下排序（collate）等价于字符“elt”的元素。例如，"),v("code",[_._v("[=a=]")]),_._v("可能会增加ä、á、à、ă、ắ、ằ、ẵ、ẳ、â、ấ、ầ、ẫ、ẩ、ǎ、å、ǻ、ä、ǟ、ã、ȧ、ǡ、ą、ā、ả、ȁ、ȃ、ạ、ặ、ậ、ḁ、ⱥ、ᶏ、ɐ、ɑ 。只能用于方括号表达式。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("[.elt.]")])]),_._v(" "),v("td",[_._v("增加"),v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Collation",title:"Collation",target:"_blank",rel:"noopener noreferrer"}},[_._v("排序元素"),v("OutboundLink")],1),_._v('（collation element）elt到表达式中。这是因为某些排序元素由多个字符组成。例如，29个字母表的西班牙语， "CH"作为单个字母排在字母C之后，因此会产生如此排序“cinco, credo, chispa”。只能用于方括号表达式。')])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\b")])]),_._v(" "),v("td",[_._v("匹配一个单词边界，也就是指单词和空格间的位置。例如，“"),v("code",[_._v("er\\b")]),_._v("”可以匹配“"),v("code",[_._v("never")]),_._v("”中的“"),v("code",[_._v("er")]),_._v("”，但不能匹配“"),v("code",[_._v("verb")]),_._v("”中的“"),v("code",[_._v("er")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\B")])]),_._v(" "),v("td",[_._v("匹配非单词边界。“"),v("code",[_._v("er\\B")]),_._v("”能匹配“"),v("code",[_._v("verb")]),_._v("”中的“"),v("code",[_._v("er")]),_._v("”，但不能匹配“"),v("code",[_._v("never")]),_._v("”中的“"),v("code",[_._v("er")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\cx")])]),_._v(" "),v("td",[_._v("匹配由x指明的控制字符。x的值必须为"),v("code",[_._v("A-Z")]),_._v("或"),v("code",[_._v("a-z")]),_._v("之一。否则，将c视为一个原义的“"),v("code",[_._v("c")]),_._v("”字符。控制字符的值等于x的值最低5比特（即对3210进制的余数）。例如，"),v("code",[_._v("\\cM")]),_._v("匹配一个Control-M或回车符。"),v("code",[_._v("\\ca")]),_._v("等效于"),v("code",[_._v("\\u0001")]),_._v(", "),v("code",[_._v("\\cb")]),_._v("等效于"),v("code",[_._v("\\u0002")]),_._v(", 等等…")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\d")])]),_._v(" "),v("td",[_._v("匹配一个数字字符。等价于"),v("code",[_._v("[0-9]")]),_._v("。注意Unicode正则表达式会匹配全角数字字符。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\D")])]),_._v(" "),v("td",[_._v("匹配一个非数字字符。等价于"),v("code",[_._v("[^0-9]")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\f")])]),_._v(" "),v("td",[_._v("匹配一个换页符。等价于"),v("code",[_._v("\\x0c")]),_._v("和"),v("code",[_._v("\\cL")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\n")])]),_._v(" "),v("td",[_._v("匹配一个换行符。等价于"),v("code",[_._v("\\x0a")]),_._v("和"),v("code",[_._v("\\cJ")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\r")])]),_._v(" "),v("td",[_._v("匹配一个回车符。等价于"),v("code",[_._v("\\x0d")]),_._v("和"),v("code",[_._v("\\cM")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\s")])]),_._v(" "),v("td",[_._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于"),v("code",[_._v("[\\f\\n\\r\\t\\v]")]),_._v("。注意Unicode正则表达式会匹配全角空格符。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\S")])]),_._v(" "),v("td",[_._v("匹配任何非空白字符。等价于"),v("code",[_._v("[^ \\f\\n\\r\\t\\v]")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\t")])]),_._v(" "),v("td",[_._v("匹配一个制表符。等价于"),v("code",[_._v("\\x09")]),_._v("和"),v("code",[_._v("\\cI")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\v")])]),_._v(" "),v("td",[_._v("匹配一个垂直制表符。等价于"),v("code",[_._v("\\x0b")]),_._v("和"),v("code",[_._v("\\cK")]),_._v("。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\w")])]),_._v(" "),v("td",[_._v("匹配包括下划线的任何单词字符。等价于“"),v("code",[_._v("[A-Za-z0-9_]")]),_._v("”。注意Unicode正则表达式会匹配中文字符。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\W")])]),_._v(" "),v("td",[_._v("匹配任何非单词字符。等价于“"),v("code",[_._v("[^A-Za-z0-9_]")]),_._v("”。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\xnn")])]),_._v(" "),v("td",[_._v("十六进制转义字符序列。匹配两个十六进制数字nn表示的字符。例如，“"),v("code",[_._v("\\x41")]),_._v("”匹配“"),v("code",[_._v("A")]),_._v("”。“"),v("code",[_._v("\\x041")]),_._v("”则等价于“"),v("code",[_._v("\\x04&1")]),_._v("”。正则表达式中可以使用ASCII编码。.")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\num")])]),_._v(" "),v("td",[_._v("向后引用（back-reference）一个子字符串（substring），该子字符串与正则表达式的第num个用括号围起来的捕捉群（capture group）子表达式（subexpression）匹配。其中num是从1开始的十进制正整数，其上限可能是9（命名字符类BRE与grep最多只能向后引用到9；Visual C++的regex库最多只能向后引用到31；ECMAScript不限向后引用的上限）。例如：“"),v("code",[_._v("(.)\\1")]),_._v("”匹配两个连续的相同字符。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\n")])]),_._v(" "),v("td",[_._v("标识一个八进制转义值或一个向后引用。如果"),v("code",[_._v("\\n")]),_._v("之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\nm")])]),_._v(" "),v("td",[_._v("3位八进制数字，标识一个八进制转义值或一个向后引用。如果"),v("code",[_._v("\\nm")]),_._v("之前至少有nm个获得子表达式，则nm为向后引用。如果"),v("code",[_._v("\\nm")]),_._v("之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则"),v("code",[_._v("\\nm")]),_._v("将匹配八进制转义值nm。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\nml")])]),_._v(" "),v("td",[_._v("如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。")])]),_._v(" "),v("tr",[v("td",[v("code",[_._v("\\un")])]),_._v(" "),v("td",[_._v("Unicode转义字符序列。其中n是一个用四个十六进制数字表示的Unicode字符。例如，"),v("code",[_._v("\\u00A9")]),_._v("匹配著作权符号（©）。")])])])]),_._v(" "),v("h2",{attrs:{id:"反向引用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#反向引用"}},[_._v("#")]),_._v(" 反向引用")]),_._v(" "),v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[_._v("-- "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),_._v(". 单个正则内使用\n^"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("\\")]),_._v("d"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("4")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("[")]),_._v("-/"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("]")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("\\")]),_._v("d"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("2")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("\\")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("\\")]),_._v("d"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("2")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("$\n-- "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("2")]),_._v(". 提取后续使用\n"),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("grep")]),_._v(" -E "),v("span",{pre:!0,attrs:{class:"token variable"}},[_._v("$reg1")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"'),v("span",{pre:!0,attrs:{class:"token variable"}},[_._v("$path")]),_._v('/"')]),_._v("custom*.log "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("|")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("sed")]),_._v(" -E "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"s#'),v("span",{pre:!0,attrs:{class:"token variable"}},[_._v("$reg2")]),_._v("#insert into xxx(xx, xx, xx, xx, xx, xx, xx) values('"),v("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[_._v("\\1")]),_._v("','"),v("span",{pre:!0,attrs:{class:"token entity",title:"\\2"}},[_._v("\\2")]),_._v("','"),v("span",{pre:!0,attrs:{class:"token entity",title:"\\3"}},[_._v("\\3")]),_._v("',"),v("span",{pre:!0,attrs:{class:"token entity",title:"\\4"}},[_._v("\\4")]),_._v(","),v("span",{pre:!0,attrs:{class:"token entity",title:"\\5"}},[_._v("\\5")]),_._v(","),v("span",{pre:!0,attrs:{class:"token entity",title:"\\6"}},[_._v("\\6")]),_._v(",'"),v("span",{pre:!0,attrs:{class:"token entity",title:"\\7"}},[_._v("\\7")]),_._v("');#g\"")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v(">")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v('"'),v("span",{pre:!0,attrs:{class:"token variable"}},[_._v("$file")]),_._v('"')]),_._v("\n")])])]),v("h2",{attrs:{id:"匹配中文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#匹配中文"}},[_._v("#")]),_._v(" 匹配中文")]),_._v(" "),v("hr"),_._v(" "),v("p",[_._v("参考链接：https://www.cnblogs.com/animalize/p/5432864.html")]),_._v(" "),v("p",[_._v("以下是比较全面的汉字Unicode分布，参考Unicode 10.0标准（2017年6月发布）：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[_._v("区块")]),_._v(" "),v("th",{staticStyle:{"text-align":"center"}},[_._v("范围")]),_._v(" "),v("th",{staticStyle:{"text-align":"center"}},[_._v("实际汉字个数/备注")]),_._v(" "),v("th",{staticStyle:{"text-align":"center"}},[_._v("正则式")])])]),_._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK统一汉字")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("4E00-62FF, 6300-77FF,7800-8CFF, 8D00-9FFF")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("20,971常见")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\u4E00-\\u9FFF] 或[一-鿆]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK统一汉字扩展A区")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("3400-4DBF")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("6,582罕见")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\u3400-\\u4DBF]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK统一汉字扩展B区")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("20000-215FF, 21600-230FF,23100-245FF, 24600-260FF,26100-275FF, 27600-290FF,29100-2A6DF")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("42,711罕见，历史")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\U00020000-\\U0002A6DF]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK统一汉字扩展C区")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("2A700-2B73F")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("4,149罕见，历史")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\U0002A700-\\U0002B73F]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK统一汉字扩展D区")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("2B740–2B81F")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("222不常见，仍在使用")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\U0002B740-\\U0002B81F]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK统一汉字扩展E区")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("2B820–2CEAF")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("5,762罕见，历史")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\U0002B820-\\U0002CEAF]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK统一汉字扩展F区")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("2CEB0-2EBEF")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("7,473罕见，历史")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\U0002CEB0-\\U0002EBEF]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK兼容汉字")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("F900–FAFF")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("472重复、可统一变体、公司定义")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\uF900-\\uFAFF]")])]),_._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("CJK兼容汉字增补")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("2F800-2FA1F")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("542可统一变体")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("[\\U0002F800-\\U0002FA1F]")])])])]),_._v(" "),v("p",[v("strong",[_._v("★如果想表示最普遍的汉字")])]),_._v(" "),v("p",[_._v("用：[\\u4E00-\\u9FFF]  或   [一-鿆]\n共有20950个汉字，包括了常用简体字和繁体字，镕等字。\n基本就是GBK的所有（21003个）汉字。也包括了BIG5的所有（13053个）繁体汉字。\n一般情况下这个就够用了。")]),_._v(" "),v("blockquote",[v("p",[_._v("说明：仅仅未包括出现在GBK里的CJK兼容汉字的21个汉字：郎凉秊裏隣兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩\nCJK兼容汉字用于转码处理，日常中是用不到的，所以不包括也没什么问题。\n注意此凉非彼凉，兀也不是常用的那个，虽然用眼睛看是一样的，参见 http://www.zhihu.com/question/20697984")])]),_._v(" "),v("p",[v("strong",[_._v("★如果想表示BMP之内的汉字")])]),_._v(" "),v("p",[_._v("也就是Unicode值<=0xFFFF之内的所有汉字，用：[\\u4E00-\\u9FFF\\u3400-\\u4DBF\\uF900-\\uFAFF]，这个包含但不限于GBK定义的汉字，共有28025个汉字。")]),_._v(" "),v("blockquote",[v("p",[_._v("说明：和上面相比，主要是多了CJK统一汉字扩展A区，这是1999年收录到Unicode 3.0标准里的6,582个汉字。\nCJK统一汉字扩展A区，包括了东亚各地区（陆港台日韩新越）的汉字，有很多康熙字典的繁体字。")])]),_._v(" "),v("p",[v("strong",[_._v("★ 如果想尽可能表示所有的汉字")])]),_._v(" "),v("p",[_._v("用：[\\u4E00-\\u9FFF\\u3400-\\u4DBF\\uF900-\\uFAFF\\U00020000-U0002EBEF]这个包含上表的所有88342个汉字")]),_._v(" "),v("blockquote",[v("p",[_._v("说明：\n1, 以上正则表达式不会匹配（英文、汉字的）标点符号，不会匹配韩国拼音字、日本假名。\n2, 会匹配一些日本、韩国独有的汉字。\n3, 包含了一些没有汉字的空位置，这通常不碍事。\n4, \\u及\\U的正则语法在Python 3.5上测试通过。\n有些正则表达式引擎不认\\uFFFF和\\UFFFFFFFF这样的语法，可以换成\\x{FFFF}试一下；有些不支持BMP之外的范围，这就没办法处理CJK统一汉字扩展B~E区了，如notepad++。")])])])}),[],!1,null,null,null);v.default=d.exports}}]);